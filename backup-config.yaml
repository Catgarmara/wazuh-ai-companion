# AI-Enhanced Security Query Interface - Backup Configuration
# This file defines backup settings for the self-contained security appliance
# with embedded AI processing and no external dependencies

# General backup settings
backup_directory: "/backups"
retention_days: 30
compression: true
encryption: false
log_level: "INFO"

# Database backup configuration
databases:
  postgres:
    enabled: true
    container_name: "postgres"
    database_name: "wazuh_chat"
    username: "postgres"
    backup_format: "sql"  # sql, custom, tar
    compression: true
    
# Docker volume backup configuration for embedded appliance
volumes:
  redis_data:
    enabled: true
    description: "Redis cache data"
    priority: "medium"
  
  model_data:
    enabled: true
    description: "Embedded AI model data and configurations"
    priority: "critical"
    backup_frequency: "daily"
    retention_days: 90
  
  vectorstore_data:
    enabled: true
    description: "Vector store and embeddings data"
    priority: "critical"
    backup_frequency: "daily"
    retention_days: 60
  
  prometheus_data:
    enabled: true
    description: "Prometheus metrics data"
    priority: "low"
    backup_frequency: "weekly"
    retention_days: 30
  
  grafana_data:
    enabled: true
    description: "Grafana dashboards and configuration"
    priority: "medium"
    backup_frequency: "weekly"
    retention_days: 30
  
  alertmanager_data:
    enabled: true
    description: "Alertmanager data"
    priority: "low"
    backup_frequency: "weekly"
    retention_days: 30

# Embedded AI backup configuration
embedded_ai:
  enabled: true
  models_path: "./models"
  vectorstore_path: "./data/vectorstore"
  model_configs_path: "./models/config"
  backup_model_configs: true
  backup_conversation_history: true
  backup_model_cache: true
  backup_embeddings: true
  verify_model_integrity: true
  compress_models: true
  description: "Complete embedded AI system backup including models, configurations, and vector stores"
  priority: "critical"
  backup_frequency: "daily"
  retention_days: 90

# Configuration files backup
configuration:
  enabled: true
  files:
    - "docker-compose.yml"
    - "docker-compose.prod.yml"
    - "deployment-config.yaml"
    - "backup-config.yaml"
    - ".env.example"
    - "nginx/nginx.conf"
    - "nginx/nginx.prod.conf"
    - "monitoring/prometheus.yml"
    - "monitoring/prometheus.prod.yml"
    - "monitoring/alertmanager.yml"
    - "redis/redis.conf"
    - "kubernetes/"

# S3 backup configuration (optional) for embedded appliance
s3:
  enabled: false
  bucket: "security-ai-appliance-backups"
  region: "us-east-1"
  access_key: ""  # Set via environment variable AWS_ACCESS_KEY_ID
  secret_key: ""  # Set via environment variable AWS_SECRET_ACCESS_KEY
  prefix: "security-ai-appliance"
  storage_class: "STANDARD_IA"  # STANDARD, STANDARD_IA, GLACIER, DEEP_ARCHIVE
  multipart_threshold: "100MB"  # For large model files
  multipart_chunksize: "50MB"
  max_bandwidth: "100MB/s"

# Backup schedule configuration
schedule:
  # Cron format: minute hour day month day_of_week
  full_backup: "0 2 * * *"      # Daily at 2 AM
  incremental: "0 */6 * * *"    # Every 6 hours
  database_only: "0 */2 * * *"  # Every 2 hours
  
# Notification configuration
notifications:
  enabled: true
  on_success: false
  on_failure: true
  
  email:
    enabled: false
    smtp_server: "smtp.example.com"
    smtp_port: 587
    username: ""
    password: ""
    from_address: "backups@example.com"
    to_addresses:
      - "admin@example.com"
  
  slack:
    enabled: false
    webhook_url: ""
    channel: "#alerts"
  
  webhook:
    enabled: false
    url: ""
    method: "POST"
    headers:
      Content-Type: "application/json"

# Backup validation settings
validation:
  enabled: true
  checksum_verification: true
  test_restore: false  # Perform test restore to verify backup integrity
  
# Encryption settings (if enabled)
encryption:
  method: "gpg"  # gpg, openssl
  key_file: "/etc/backup-encryption.key"
  recipient: "backup@example.com"

# Monitoring and metrics
monitoring:
  enabled: true
  metrics_endpoint: "http://localhost:8000/metrics"
  prometheus_pushgateway: ""
  
# Recovery settings
recovery:
  pre_recovery_backup: true  # Create backup before recovery
  verify_before_restore: true
  stop_services_timeout: 300
  start_services_timeout: 600
  
# Performance settings
performance:
  parallel_backups: false
  compression_level: 6  # 1-9 for gzip
  max_backup_size: "10GB"
  bandwidth_limit: ""  # e.g., "100M" for 100 MB/s

# Backup types configuration for embedded appliance
backup_types:
  full:
    description: "Complete backup of all embedded appliance components"
    components:
      - "postgres"
      - "redis"
      - "embedded_ai"
      - "vectorstore"
      - "volumes"
      - "configuration"
    
  ai_models_only:
    description: "Backup embedded AI models and configurations only"
    components:
      - "embedded_ai"
      - "model_data"
      - "vectorstore_data"
    
  incremental:
    description: "Incremental backup of changed data"
    components:
      - "postgres"
      - "redis"
    
  database_only:
    description: "Database backup only"
    components:
      - "postgres"
    
  configuration_only:
    description: "Configuration files backup only"
    components:
      - "configuration"

# Disaster recovery settings for embedded appliance
disaster_recovery:
  rpo_target: "1h"  # Recovery Point Objective
  rto_target: "4h"  # Recovery Time Objective
  
  backup_locations:
    primary: "/backups"
    secondary: "/backups/offsite"
    cloud: "s3://security-ai-appliance-backups"
  
  embedded_ai_recovery:
    model_download_timeout: "60m"  # Extended for large models
    vectorstore_rebuild_timeout: "4h"  # Extended for large datasets
    model_verification_timeout: "30m"
    fallback_models: ["microsoft/DialoGPT-small", "distilbert-base-uncased"]
    auto_model_download: true
    verify_model_checksums: true
  
  testing:
    frequency: "monthly"
    automated: true
    notification_required: true
    test_model_loading: true
  
  documentation:
    runbook_path: "./docs/DISASTER_RECOVERY.md"
    contact_list: "./docs/EMERGENCY_CONTACTS.md"